{"version":3,"file":"static/js/621.665b25f5.chunk.js","mappings":"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","sources":["components/ContactItem/ContactItem.jsx","redux/selectors.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/FormAddContact/FormAddContact.jsx","components/Section/Section.jsx","pages/HomePage.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts-operations';\nimport { IconButton, ListItem, ListItemText } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nexport const ContactItem = ({ contact: { id, name, number } }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <ListItem\n      secondaryAction={\n        <IconButton\n          edge=\"end\"\n          aria-label=\"delete\"\n          onClick={() => dispatch(deleteContact(id))}\n        >\n          <DeleteIcon />\n        </IconButton>\n      }\n    >\n      <ListItemText primary={name} secondary={`Tel.: ${number}`} />\n\n      {/* <Button\n        onClick={() => dispatch(deleteContact(id))}\n        type=\"button\"\n        color=\"inherit\"\n        size=\"small\"\n      >\n        <DeleteIcon />\n      </Button> */}\n    </ListItem>\n  );\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = store => store.contacts.items;\nexport const selectIsLoading = store => store.contacts.isLoading;\nexport const selectError = store => store.contacts.error;\n\nexport const selectFilter = store => store.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filterValue) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterValue.toLowerCase())\n    );\n  }\n);\n","import { ContactItem } from 'components/ContactItem/ContactItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectError,\n  selectFilteredContacts,\n  selectIsLoading,\n} from '../../redux/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from '../../redux/contacts-operations';\nimport { AppLoader } from '../Loader/Loader';\nimport { List } from '@mui/material';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      {isLoading && <AppLoader />}\n      {error && <p>Error: {error}</p>}\n      {Boolean(contacts.length) && (\n        <List sx={{ width: '100%', maxWidth: 280, bgcolor: 'transparent' }}>\n          {contacts.map(contact => (\n            <ContactItem key={contact.id} contact={contact} />\n          ))}\n        </List>\n      )}\n    </div>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/filter-slice';\nimport { TextField } from '@mui/material';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const changeFilter = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <>\n      <TextField\n        type=\"search\"\n        name=\"filter\"\n        label=\"Find contacts by name\"\n        onChange={changeFilter}\n        style={{}}\n      />\n    </>\n  );\n};\n","import { Notify } from 'notiflix';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/selectors';\nimport { addContact } from '../../redux/contacts-operations';\nimport { Box, Button, FormControl, TextField } from '@mui/material';\n\nexport const FormAddContact = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleInputChange = evt => {\n    const { value } = evt.target;\n    if (evt.target.name === 'name') {\n      setName(value);\n    } else if (evt.target.name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const handleFormSubmit = evt => {\n    evt.preventDefault();\n    const doesExist = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (doesExist) {\n      return alert(`${name} is already in contacts.`);\n    }\n\n    dispatch(addContact({ name, number }));\n    Notify.success('The contact was created');\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        '& .MuiTextField-root': { m: 1, minWidth: '360px' },\n      }}\n      noValidate\n      onSubmit={handleFormSubmit}\n      // autoComplete=\"off\"\n    >\n      <FormControl>\n        <TextField\n          type=\"text\"\n          name=\"name\"\n          label=\"Name\"\n          required\n          placeholder=\"Adam Smith\"\n          value={name}\n          onChange={handleInputChange}\n        />\n        <TextField\n          type=\"tel\"\n          name=\"number\"\n          label=\"Number\"\n          required\n          pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\n          placeholder=\"000-00-00\"\n          value={number}\n          onChange={handleInputChange}\n        />\n\n        <Button type=\"submit\" color=\"inherit\" variant=\"outlined\">\n          Add contact\n        </Button>\n      </FormControl>\n    </Box>\n  );\n};\n","import styled from 'styled-components';\n\nconst SectionStyled = styled.section`\n  /* display: flex;\n  flex-direction: column;\n  padding: 0 15px;\n\n  button {\n    background-color: #e1ecf4;\n    border-radius: 3px;\n    border: 1px solid #7aa7c7;\n    box-shadow: rgba(255, 255, 255, 0.7) 0 1px 0 0 inset;\n    box-sizing: border-box;\n    color: #39739d;\n    cursor: pointer;\n\n    font-weight: 400;\n    line-height: 1.15385;\n\n    button:hover,\n    button:focus {\n      background-color: #b3d3ea;\n      color: #2c5777;\n    }\n  }\n  form {\n    padding: 10px;\n    width: 400px;\n    border-radius: 3px;\n    border: 1px solid #7aa7c7;\n  }\n\n  label {\n    display: block;\n    margin-top: 10px;\n  }\n  input {\n    display: block;\n    padding: 10px;\n    margin-top: 10px;\n    width: 300px;\n    background-color: #e1ecf4;\n    border-radius: 3px;\n    border: 1px solid #7aa7c7;\n    box-shadow: rgba(255, 255, 255, 0.7) 0 1px 0 0 inset;\n  } */\n`;\n\nexport const Section = ({ title, children }) => (\n  <SectionStyled>\n    <h2>{title}</h2>\n    {children}\n  </SectionStyled>\n);\n","import { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { FormAddContact } from 'components/FormAddContact/FormAddContact';\nimport { Section } from 'components/Section/Section';\nimport React from 'react';\n\nconst HomePage = () => {\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <FormAddContact />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Section>\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["ContactItem","_ref","_ref$contact","contact","id","name","number","dispatch","useDispatch","_jsx","ListItem","secondaryAction","IconButton","edge","onClick","deleteContact","children","DeleteIcon","ListItemText","primary","secondary","concat","selectContacts","store","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","filter","filterValue","toLowerCase","includes","ContactList","useSelector","useEffect","fetchContacts","_jsxs","AppLoader","Boolean","length","List","sx","width","maxWidth","bgcolor","map","Filter","_Fragment","TextField","type","label","onChange","event","setFilter","target","value","style","FormAddContact","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setNumber","handleInputChange","evt","Box","component","m","minWidth","noValidate","onSubmit","preventDefault","some","alert","addContact","Notify","FormControl","required","placeholder","pattern","Button","color","variant","SectionStyled","styled","_templateObject","_taggedTemplateLiteral","Section","title"],"sourceRoot":""}