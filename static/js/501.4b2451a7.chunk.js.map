{"version":3,"file":"static/js/501.4b2451a7.chunk.js","mappings":"kVA6DA,EAvDkB,WAChB,IAAAA,GAA0CC,EAAAA,EAAAA,IAAQ,CAChDC,aAAc,CACZC,MAAO,GACPC,SAAU,MAHNC,EAAQL,EAARK,SAAUC,EAAYN,EAAZM,aAAcC,EAAKP,EAALO,MAM1BC,GAAWC,EAAAA,EAAAA,MAEXC,EAAgB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMC,GAAI,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACZV,GAASW,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,GAAC,CAAC,EAAIL,KAAS,KAAD,EAArC,GAEsB,aAFtBC,EAAAK,KAEDC,KAAKC,cAA4B,CAAAP,EAAAE,KAAA,QACY,OAAtDM,EAAAA,OAAAA,QAAe,uCAAuCR,EAAAS,OAAA,iBAIxDD,EAAAA,OAAAA,QAAe,iBACfjB,IAAQ,wBAAAS,EAAAU,OAAA,GAAAZ,EAAA,KACT,gBAVqBa,GAAA,OAAAhB,EAAAiB,MAAA,KAAAC,UAAA,KAYtB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFC,UAAU,OACVC,GAAI,CACF,uBAAwB,CAAEC,EAAG,IAAKC,SAAU,UAE9CC,SAAU9B,EAAaI,GAAkB2B,SAAA,EAEzCC,EAAAA,EAAAA,KAACC,EAAAA,GAASnB,EAAAA,EAAAA,GAAA,CACRoB,KAAK,QACLC,KAAK,QACLC,MAAM,QACNC,UAAQ,GACJtC,EAAS,QAAS,CAAEsC,SAAU,8BAEpCL,EAAAA,EAAAA,KAACC,EAAAA,GAASnB,EAAAA,EAAAA,GAAA,CACRoB,KAAK,WACLC,KAAK,WACLC,MAAM,WACNC,UAAQ,GACJtC,EAAS,WAAY,CAAEsC,SAAU,8BAEvCL,EAAAA,EAAAA,KAACM,EAAAA,EAAM,CACLJ,KAAK,SACLP,GAAI,CACFY,GAAI,GACJR,SACH,aAKP,E,mBCXA,EAzCkB,WAChB,IAAMS,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1BC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IAE9B,OACEZ,EAAAA,EAAAA,KAACP,EAAAA,EAAG,CACFE,GAAI,CACFkB,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,yBAA0B,QAC1BC,gBAAiB,SAAAC,GAAK,OAAIA,EAAMC,QAAQC,WAAWC,KAAK,EACxDC,QAAS,GACTvB,UAEFP,EAAAA,EAAAA,MAAC+B,EAAAA,EAAK,CACJC,UAAW,EACX7B,GAAI,CACF8B,SAAU,IACVC,MAAO,OACPJ,QAAS,EACTL,gBAAiB,SAAAC,GAAK,OAAIA,EAAMC,QAAQC,WAAWO,OAAO,EAC1DC,aAAc,EACdC,UAAW,SAAAX,GAAK,OAAIA,EAAMY,QAAQ,EAAE,GACpC/B,SAAA,EAEFC,EAAAA,EAAAA,KAAC+B,EAAAA,EAAU,CAACC,QAAQ,KAAKtC,UAAU,KAAKuC,cAAY,EAAAlC,SAAC,WAGpDS,IAAeR,EAAAA,EAAAA,KAACkC,EAAAA,EAAS,KAC1BlC,EAAAA,EAAAA,KAACmC,EAAS,IACTxB,IACCnB,EAAAA,EAAAA,MAAC4C,EAAAA,EAAK,CAACJ,QAAQ,WAAWK,SAAS,QAAQ1C,GAAI,CAAEY,GAAI,GAAIR,SAAA,CAAC,UAChDY,SAMpB,C","sources":["components/LoginForm/LoginForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["import { Box, Button, TextField } from '@mui/material';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../../redux/auth/auth-operations';\nimport { useForm } from 'react-hook-form';\nimport { Notify } from 'notiflix';\n\nconst LoginForm = () => {\n  const { register, handleSubmit, reset } = useForm({\n    initialValue: {\n      email: '',\n      password: '',\n    },\n  });\n  const dispatch = useDispatch();\n\n  const handleFormSubmit = async data => {\n    const result = await dispatch(login({ ...data }));\n\n    if (result.meta.requestStatus === 'rejected') {\n      Notify.failure('The email or password is incorrect.');\n      return;\n    }\n\n    Notify.success('Welcome back!');\n    reset();\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        '& .MuiTextField-root': { m: 1.5, minWidth: '360px' },\n      }}\n      onSubmit={handleSubmit(handleFormSubmit)}\n    >\n      <TextField\n        type=\"email\"\n        name=\"email\"\n        label=\"Email\"\n        required\n        {...register('email', { required: 'This field is required' })}\n      />\n      <TextField\n        type=\"password\"\n        name=\"password\"\n        label=\"Password\"\n        required\n        {...register('password', { required: 'This field is required' })}\n      />\n      <Button\n        type=\"submit\"\n        sx={{\n          mt: 2,\n        }}\n      >\n        Submit\n      </Button>\n    </Box>\n  );\n};\n\nexport default LoginForm;\n","import React from 'react';\nimport { Alert, Typography, Box, Paper } from '@mui/material';\nimport LoginForm from 'components/LoginForm/LoginForm';\nimport { selectAuthError, selectAuthLoading } from '../redux/selectors';\nimport { useSelector } from 'react-redux';\nimport { AppLoader } from 'components/Loader/Loader';\n\nconst LoginPage = () => {\n  const authLoading = useSelector(selectAuthLoading);\n  const authError = useSelector(selectAuthError);\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        hangingPunctuationHeight: '100vh',\n        backgroundColor: theme => theme.palette.background.paper,\n        padding: 3,\n      }}\n    >\n      <Paper\n        elevation={3}\n        sx={{\n          maxWidth: 600,\n          width: '100%',\n          padding: 3,\n          backgroundColor: theme => theme.palette.background.default,\n          borderRadius: 2,\n          boxShadow: theme => theme.shadows[3],\n        }}\n      >\n        <Typography variant=\"h1\" component=\"h1\" gutterBottom>\n          Log In\n        </Typography>\n        {authLoading && <AppLoader />}\n        <LoginForm />\n        {authError && (\n          <Alert variant=\"outlined\" severity=\"error\" sx={{ mt: 2 }}>\n            Error: {authError}\n          </Alert>\n        )}\n      </Paper>\n    </Box>\n  );\n};\n\nexport default LoginPage;\n"],"names":["_useForm","useForm","initialValue","email","password","register","handleSubmit","reset","dispatch","useDispatch","handleFormSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","login","_objectSpread","sent","meta","requestStatus","Notify","abrupt","stop","_x","apply","arguments","_jsxs","Box","component","sx","m","minWidth","onSubmit","children","_jsx","TextField","type","name","label","required","Button","mt","authLoading","useSelector","selectAuthLoading","authError","selectAuthError","display","justifyContent","alignItems","hangingPunctuationHeight","backgroundColor","theme","palette","background","paper","padding","Paper","elevation","maxWidth","width","default","borderRadius","boxShadow","shadows","Typography","variant","gutterBottom","AppLoader","LoginForm","Alert","severity"],"sourceRoot":""}