{"version":3,"file":"static/js/695.c016a1f5.chunk.js","mappings":"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","sources":["components/ContactItem/ContactItem.jsx","redux/selectors.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/FormAddContact/FormAddContact.jsx","components/Section/Section.jsx","pages/HomePage.styles.js","pages/HomePage.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts-operations';\nimport { IconButton, ListItem, ListItemText, Typography } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nexport const ContactItem = ({ contact: { id, name, number } }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <ListItem\n      secondaryAction={\n        <IconButton\n          edge=\"end\"\n          aria-label=\"delete\"\n          onClick={() => dispatch(deleteContact(id))}\n        >\n          <DeleteIcon />\n        </IconButton>\n      }\n    >\n      <ListItemText\n        primary={<Typography variant=\"body1\">{name}</Typography>}\n        secondary={<Typography variant=\"body2\">Tel.: {number}</Typography>}\n      />\n    </ListItem>\n  );\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = store => store.contacts.items;\nexport const selectIsLoading = store => store.contacts.isLoading;\nexport const selectError = store => store.contacts.error;\n\nexport const selectFilter = store => store.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filterValue) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterValue.toLowerCase())\n    );\n  }\n);\n","import { ContactItem } from '../ContactItem/ContactItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectError,\n  selectFilteredContacts,\n  selectIsLoading,\n} from '../../redux/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from '../../redux/contacts-operations';\nimport { AppLoader } from '../Loader/Loader';\nimport { List } from '@mui/material';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      {isLoading && <AppLoader />}\n      {error && <p>Error: {error}</p>}\n      {Boolean(contacts.length) && (\n        <List sx={{ width: '100%', maxWidth: 280, bgcolor: 'transparent' }}>\n          {contacts.map(contact => (\n            <ContactItem key={contact.id} contact={contact} />\n          ))}\n        </List>\n      )}\n    </div>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/filter-slice';\nimport { Box, TextField } from '@mui/material';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const changeFilter = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        '& .MuiTextField-root': { m: 1.5, width: '35ch' },\n      }}\n    >\n      <TextField\n        type=\"search\"\n        name=\"filter\"\n        label=\"Find contacts by name\"\n        onChange={changeFilter}\n        size=\"small\"\n      />\n    </Box>\n  );\n};\n","import { Notify } from 'notiflix';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/selectors';\nimport { addContact } from '../../redux/contacts-operations';\nimport { Box, Button, FormControl, TextField } from '@mui/material';\n\nimport { theme } from '../../ThemeProvider/ThemeProvider';\n\nexport const FormAddContact = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleInputChange = evt => {\n    const { value } = evt.target;\n    if (evt.target.name === 'name') {\n      setName(value);\n    } else if (evt.target.name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const handleFormSubmit = evt => {\n    evt.preventDefault();\n    const doesExist = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (doesExist) {\n      return alert(`${name} is already in contacts.`);\n    }\n\n    dispatch(addContact({ name, number }));\n    Notify.success('The contact was created');\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        '& .MuiTextField-root': { m: 1.5, minWidth: '360px' },\n      }}\n      onSubmit={handleFormSubmit}\n    >\n      <FormControl>\n        <TextField\n          type=\"text\"\n          name=\"name\"\n          label=\"Name\"\n          required\n          placeholder=\"Adam Smith\"\n          value={name}\n          onChange={handleInputChange}\n        />\n        <TextField\n          type=\"tel\"\n          name=\"number\"\n          label=\"Number\"\n          required\n          pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\n          placeholder=\"000-00-00\"\n          value={number}\n          onChange={handleInputChange}\n        />\n\n        <Button\n          type=\"submit\"\n          sx={{\n            mt: 2,\n            ...theme.palette.button,\n          }}\n        >\n          Add contact\n        </Button>\n      </FormControl>\n    </Box>\n  );\n};\n","import { Typography } from '@mui/material';\nimport { theme } from '../../ThemeProvider/ThemeProvider';\n\nexport const Section = ({ title, children }) => (\n  <>\n    <Typography sx={{ ...theme.typography.h2, padding: '20px' }}>\n      {title}\n    </Typography>\n    {children}\n  </>\n);\n","import styled from '@emotion/styled';\n\nconst FlippedImage = styled.img`\n  position: absolute;\n  z-index: -1;\n  transform: scaleX(-1);\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  margin: 0 auto;\n`;\n\nexport const StyledContainer = ({ children }) => {\n  return (\n    <>\n      <FlippedImage\n        src=\"https://images.pexels.com/photos/5797904/pexels-photo-5797904.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n        alt=\"Background\"\n      />\n      {children}\n    </>\n  );\n};\n","import { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { FormAddContact } from 'components/FormAddContact/FormAddContact';\nimport { Section } from 'components/Section/Section';\nimport React from 'react';\nimport { StyledContainer } from './HomePage.styles';\n\nconst HomePage = () => {\n  return (\n    <StyledContainer>\n      <Section title=\"Phonebook\">\n        <FormAddContact />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Section>\n    </StyledContainer>\n  );\n};\n\nexport default HomePage;\n"],"names":["ContactItem","_ref","_ref$contact","contact","id","name","number","dispatch","useDispatch","_jsx","ListItem","secondaryAction","IconButton","edge","onClick","deleteContact","children","DeleteIcon","ListItemText","primary","Typography","variant","secondary","_jsxs","selectContacts","store","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","filter","filterValue","toLowerCase","includes","ContactList","useSelector","useEffect","fetchContacts","AppLoader","Boolean","length","List","sx","width","maxWidth","bgcolor","map","Filter","Box","component","m","TextField","type","label","onChange","event","setFilter","target","value","size","FormAddContact","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setNumber","handleInputChange","evt","minWidth","onSubmit","preventDefault","some","alert","concat","addContact","Notify","FormControl","required","placeholder","pattern","Button","_objectSpread","mt","theme","Section","title","_Fragment","padding","FlippedImage","styled","_templateObject","_taggedTemplateLiteral","StyledContainer","src","alt"],"sourceRoot":""}