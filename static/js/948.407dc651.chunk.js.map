{"version":3,"file":"static/js/948.407dc651.chunk.js","mappings":"oRAWaA,EAAc,SAAHC,GAA2C,IAADC,EAAAD,EAApCE,QAAWC,EAAEF,EAAFE,GAAIC,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,OAC3CC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAQ,CACPC,iBACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CACTC,KAAK,MACL,aAAW,SACXC,QAAS,kBAAMR,GAASS,EAAAA,EAAAA,IAAcZ,GAAI,EAACa,UAE3CL,EAAAA,EAAAA,KAACM,EAAAA,EAAU,MAEdD,SAAA,EAEDL,EAAAA,EAAAA,KAACO,EAAAA,EAAY,CACXC,SAASR,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CAACC,QAAQ,QAAOL,SAAEZ,IACtCkB,WAAWd,EAAAA,EAAAA,MAACY,EAAAA,EAAU,CAACC,QAAQ,QAAOL,SAAA,CAAC,SAAOX,QAEhDM,EAAAA,EAAAA,KAACY,EAAAA,EAAO,MAGd,E,sCCrBaC,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IACxBC,GAAQJ,EAAAA,EAAAA,IAAYK,EAAAA,IAEpBzB,GAAWC,EAAAA,EAAAA,MAMjB,OAJAyB,EAAAA,EAAAA,YAAU,WACR1B,GAAS2B,EAAAA,EAAAA,MACX,GAAG,CAAC3B,KAGFE,EAAAA,EAAAA,MAAA,OAAAQ,SAAA,CACGY,IAAajB,EAAAA,EAAAA,KAACuB,EAAAA,EAAS,IACvBJ,IAAStB,EAAAA,EAAAA,MAAA,KAAAQ,SAAA,CAAG,UAAQc,KACpBK,QAAQV,EAASW,UAChBzB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAI,CAACC,GAAI,CAAEC,MAAO,OAAQC,SAAU,IAAKC,QAAS,eAAgBzB,SAChES,EAASiB,KAAI,SAAAxC,GAAO,OACnBS,EAAAA,EAAAA,KAACZ,EAAW,CAAkBG,QAASA,GAArBA,EAAQC,GAAwB,QAM9D,E,4BChCawC,EAAS,WACpB,IAAMrC,GAAWC,EAAAA,EAAAA,MAMjB,OACEI,EAAAA,EAAAA,KAACiC,EAAAA,EAAG,CACFC,UAAU,OACVP,GAAI,CACF,uBAAwB,CAAEQ,EAAG,IAAKP,MAAO,SACzCvB,UAEFL,EAAAA,EAAAA,KAACoC,EAAAA,EAAS,CACRC,KAAK,SACL5C,KAAK,SACL6C,MAAM,wBACNC,SAfe,SAAAC,GACnB7C,GAAS8C,EAAAA,EAAAA,GAAUD,EAAME,OAAOC,OAClC,EAcMC,KAAK,WAIb,E,wCCpBaC,EAAiB,WAC5B,IAAAC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BrD,EAAIuD,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA4BJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAjCzD,EAAM0D,EAAA,GAAEC,EAASD,EAAA,GAElBtC,GAAWC,EAAAA,EAAAA,IAAYuC,EAAAA,IACvB3D,GAAWC,EAAAA,EAAAA,MAGX2D,EAAoB,SAAAC,GACxB,IAAQb,EAAUa,EAAId,OAAdC,MACgB,SAApBa,EAAId,OAAOjD,KACbyD,EAAQP,GACqB,WAApBa,EAAId,OAAOjD,MACpB4D,EAAUV,EAEd,EAmBA,OACE3C,EAAAA,EAAAA,KAACiC,EAAAA,EAAG,CACFC,UAAU,OACVP,GAAI,CACF,uBAAwB,CAAEQ,EAAG,IAAKsB,SAAU,UAE9CC,SAvBqB,SAAAF,GAMvB,GALAA,EAAIG,iBACc7C,EAAS8C,MACzB,SAAArE,GAAO,OAAIA,EAAQE,KAAKoE,gBAAkBpE,EAAKoE,aAAa,IAI5D,OAAOC,MAAM,GAADC,OAAItE,EAAI,6BAGtBE,GAASqE,EAAAA,EAAAA,IAAW,CAAEvE,KAAAA,EAAMC,OAAAA,KAC5BuE,EAAAA,OAAAA,QAAe,2BAEff,EAAQ,IACRG,EAAU,GACZ,EAQ+BhD,UAE3BR,EAAAA,EAAAA,MAACqE,EAAAA,EAAW,CAAA7D,SAAA,EACVL,EAAAA,EAAAA,KAACoC,EAAAA,EAAS,CACRC,KAAK,OACL5C,KAAK,OACL6C,MAAM,OACN6B,UAAQ,EACRC,YAAY,aACZzB,MAAOlD,EACP8C,SAAUgB,KAEZvD,EAAAA,EAAAA,KAACoC,EAAAA,EAAS,CACRC,KAAK,MACL5C,KAAK,SACL6C,MAAM,SACN6B,UAAQ,EACRE,QAAQ,6BACRD,YAAY,YACZzB,MAAOjD,EACP6C,SAAUgB,KAGZvD,EAAAA,EAAAA,KAACsE,EAAAA,EAAM,CACLjC,KAAK,SACLV,GAAI,CACF4C,GAAI,GACJlE,SACH,oBAMT,E,oBC/EamE,EAAU,SAAHnF,GAA6B,IAAvBoF,EAAKpF,EAALoF,MAAOpE,EAAQhB,EAARgB,SACzBqE,GAAQC,EAAAA,EAAAA,KACd,OACE9E,EAAAA,EAAAA,MAAA+E,EAAAA,SAAA,CAAAvE,SAAA,EACEL,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CAACkB,IAAEkD,EAAAA,EAAAA,GAAA,GAAOH,EAAMI,WAAWC,IAAK1E,SAAEoE,IAC5CpE,IAGP,E,kBCRa2E,EAAwBC,EAAAA,EAAAA,QAAcC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gmBA2BtCC,EAA0BH,EAAAA,EAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,iJCDjD,EAlBqB,WACnB,OACEtF,EAAAA,EAAAA,MAACmF,EAAqB,CAAA3E,SAAA,EACpBL,EAAAA,EAAAA,KAACoF,EAAuB,CAAA/E,UACtBL,EAAAA,EAAAA,KAACwE,EAAO,CAACC,MAAM,YAAWpE,UACxBL,EAAAA,EAAAA,KAAC6C,EAAc,SAGnB7C,EAAAA,EAAAA,KAACoF,EAAuB,CAAA/E,UACtBR,EAAAA,EAAAA,MAAC2E,EAAO,CAACC,MAAM,WAAUpE,SAAA,EACvBL,EAAAA,EAAAA,KAACgC,EAAM,KACPhC,EAAAA,EAAAA,KAACa,EAAW,WAKtB,C","sources":["components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/FormAddContact/FormAddContact.jsx","components/Section/Section.jsx","pages/ContactsPage.styled.js","pages/ContactsPage.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts-operations';\nimport {\n  Divider,\n  IconButton,\n  ListItem,\n  ListItemText,\n  Typography,\n} from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nexport const ContactItem = ({ contact: { id, name, number } }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <ListItem\n      secondaryAction={\n        <IconButton\n          edge=\"end\"\n          aria-label=\"delete\"\n          onClick={() => dispatch(deleteContact(id))}\n        >\n          <DeleteIcon />\n        </IconButton>\n      }\n    >\n      <ListItemText\n        primary={<Typography variant=\"body1\">{name}</Typography>}\n        secondary={<Typography variant=\"body2\">Tel.: {number}</Typography>}\n      />\n      <Divider />\n    </ListItem>\n  );\n};\n","import { ContactItem } from '../ContactItem/ContactItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectError,\n  selectFilteredContacts,\n  selectIsLoading,\n} from '../../redux/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from '../../redux/contacts-operations';\nimport { AppLoader } from '../Loader/Loader';\nimport { List } from '@mui/material';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      {isLoading && <AppLoader />}\n      {error && <p>Error: {error}</p>}\n      {Boolean(contacts.length) && (\n        <List sx={{ width: '100%', maxWidth: 280, bgcolor: 'transparent' }}>\n          {contacts.map(contact => (\n            <ContactItem key={contact.id} contact={contact} />\n          ))}\n        </List>\n      )}\n    </div>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/filter-slice';\nimport { Box, TextField } from '@mui/material';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const changeFilter = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        '& .MuiTextField-root': { m: 1.5, width: '35ch' },\n      }}\n    >\n      <TextField\n        type=\"search\"\n        name=\"filter\"\n        label=\"Find contacts by name\"\n        onChange={changeFilter}\n        size=\"small\"\n      />\n    </Box>\n  );\n};\n","import { Notify } from 'notiflix';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/selectors';\nimport { addContact } from '../../redux/contacts-operations';\nimport { Box, Button, FormControl, TextField } from '@mui/material';\n\nexport const FormAddContact = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  // const theme = useTheme();\n\n  const handleInputChange = evt => {\n    const { value } = evt.target;\n    if (evt.target.name === 'name') {\n      setName(value);\n    } else if (evt.target.name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const handleFormSubmit = evt => {\n    evt.preventDefault();\n    const doesExist = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (doesExist) {\n      return alert(`${name} is already in contacts.`);\n    }\n\n    dispatch(addContact({ name, number }));\n    Notify.success('The contact was created');\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        '& .MuiTextField-root': { m: 1.5, minWidth: '360px' },\n      }}\n      onSubmit={handleFormSubmit}\n    >\n      <FormControl>\n        <TextField\n          type=\"text\"\n          name=\"name\"\n          label=\"Name\"\n          required\n          placeholder=\"Adam Smith\"\n          value={name}\n          onChange={handleInputChange}\n        />\n        <TextField\n          type=\"tel\"\n          name=\"number\"\n          label=\"Number\"\n          required\n          pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\n          placeholder=\"000-00-00\"\n          value={number}\n          onChange={handleInputChange}\n        />\n\n        <Button\n          type=\"submit\"\n          sx={{\n            mt: 2,\n          }}\n        >\n          Add contact\n        </Button>\n      </FormControl>\n    </Box>\n  );\n};\n","import { Typography, useTheme } from '@mui/material';\n\nexport const Section = ({ title, children }) => {\n  const theme = useTheme();\n  return (\n    <>\n      <Typography sx={{ ...theme.typography.h2 }}>{title}</Typography>\n      {children}\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const StyledContactsSection = styled.section`\n  padding-top: 40px;\n  padding-bottom: 16px;\n  position: relative;\n  min-height: 100vh;\n  overflow: hidden;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-image: linear-gradient(\n        rgb(196 245 186 / 81%),\n        rgb(241 240 201 / 73%)\n      ),\n      url('https://cdn.pixabay.com/photo/2022/03/18/07/05/envelope-7076001_1280.png');\n    background-size: contain;\n    background-repeat: no-repeat;\n    background-position: center;\n    background-attachment: fixed;\n    z-index: -1;\n  }\n`;\n\nexport const StyledContactsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 16px;\n  margin-bottom: 30px;\n`;\n","import { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { FormAddContact } from 'components/FormAddContact/FormAddContact';\nimport { Section } from 'components/Section/Section';\nimport React from 'react';\nimport {\n  StyledContactsContainer,\n  StyledContactsSection,\n} from './ContactsPage.styled';\n\nconst ContactsPage = () => {\n  return (\n    <StyledContactsSection>\n      <StyledContactsContainer>\n        <Section title=\"Phonebook\">\n          <FormAddContact />\n        </Section>\n      </StyledContactsContainer>\n      <StyledContactsContainer>\n        <Section title=\"Contacts\">\n          <Filter />\n          <ContactList />\n        </Section>\n      </StyledContactsContainer>\n    </StyledContactsSection>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["ContactItem","_ref","_ref$contact","contact","id","name","number","dispatch","useDispatch","_jsxs","ListItem","secondaryAction","_jsx","IconButton","edge","onClick","deleteContact","children","DeleteIcon","ListItemText","primary","Typography","variant","secondary","Divider","ContactList","contacts","useSelector","selectFilteredContacts","isLoading","selectIsLoading","error","selectError","useEffect","fetchContacts","AppLoader","Boolean","length","List","sx","width","maxWidth","bgcolor","map","Filter","Box","component","m","TextField","type","label","onChange","event","setFilter","target","value","size","FormAddContact","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setNumber","selectContacts","handleInputChange","evt","minWidth","onSubmit","preventDefault","some","toLowerCase","alert","concat","addContact","Notify","FormControl","required","placeholder","pattern","Button","mt","Section","title","theme","useTheme","_Fragment","_objectSpread","typography","h2","StyledContactsSection","styled","_templateObject","_taggedTemplateLiteral","StyledContactsContainer","_templateObject2"],"sourceRoot":""}