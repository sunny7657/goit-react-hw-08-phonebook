{"version":3,"file":"static/js/948.2141938f.chunk.js","mappings":"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","sources":["components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Section/Section.jsx","pages/ContactsPage.styled.js","components/FormAddContact/FormAddContact.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts-operations';\nimport {\n  Divider,\n  IconButton,\n  ListItem,\n  ListItemText,\n  Typography,\n} from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nexport const ContactItem = ({ contact: { id, name, number } }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <ListItem\n      secondaryAction={\n        <IconButton\n          edge=\"end\"\n          aria-label=\"delete\"\n          onClick={() => dispatch(deleteContact(id))}\n        >\n          <DeleteIcon />\n        </IconButton>\n      }\n    >\n      <ListItemText\n        primary={<Typography variant=\"body1\">{name}</Typography>}\n        secondary={<Typography variant=\"body2\">Tel.: {number}</Typography>}\n      />\n      <Divider />\n    </ListItem>\n  );\n};\n","import { ContactItem } from '../ContactItem/ContactItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectError,\n  selectFilteredContacts,\n  selectIsLoading,\n} from '../../redux/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from '../../redux/contacts-operations';\nimport { AppLoader } from '../Loader/Loader';\nimport { Alert, List } from '@mui/material';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      {isLoading && <AppLoader />}\n      {error && (\n        <Alert variant=\"outlined\" severity=\"error\">\n          Error: {error}\n        </Alert>\n      )}\n      {Boolean(contacts.length) && (\n        <List sx={{ width: '100%', maxWidth: 280, bgcolor: 'transparent' }}>\n          {contacts.map(contact => (\n            <ContactItem key={contact.id} contact={contact} />\n          ))}\n        </List>\n      )}\n    </div>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/filter-slice';\nimport { Box, TextField } from '@mui/material';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const changeFilter = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        '& .MuiTextField-root': { m: 1.5, width: '35ch' },\n      }}\n    >\n      <TextField\n        type=\"search\"\n        name=\"filter\"\n        label=\"Find contacts\"\n        onChange={changeFilter}\n        size=\"small\"\n      />\n    </Box>\n  );\n};\n","import { Typography, useTheme } from '@mui/material';\n\nexport const Section = ({ title, children }) => {\n  const theme = useTheme();\n  return (\n    <>\n      <Typography sx={{ ...theme.typography.h2 }}>{title}</Typography>\n      {children}\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const StyledContactsSection = styled.section`\n  padding-top: 40px;\n  padding-bottom: 16px;\n  position: relative;\n  min-height: 100vh;\n  overflow: hidden;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-image: linear-gradient(\n        rgb(196 245 186 / 81%),\n        rgb(241 240 201 / 73%)\n      ),\n      url('https://cdn.pixabay.com/photo/2022/03/18/07/05/envelope-7076001_1280.png');\n    background-size: contain;\n    background-repeat: no-repeat;\n    background-position: center;\n    background-attachment: fixed;\n    z-index: -1;\n  }\n`;\n\nexport const StyledContactsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 16px;\n  margin-bottom: 30px;\n`;\n","import { Notify } from 'notiflix';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts-operations';\nimport { selectContacts } from '../../redux/selectors';\nimport { Box, Button, TextField } from '@mui/material';\n\nconst FormAddContact = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const { register, handleSubmit, reset } = useForm({\n    defaultValues: { name: '', number: '' },\n  });\n\n  const handleFormSubmit = data => {\n    const doesExist = contacts.some(contact => contact.name === data.name);\n\n    if (doesExist) {\n      Notify.failure('You have the contact with this name');\n      return;\n    }\n\n    dispatch(addContact(data));\n    reset();\n    Notify.success('The contact was created');\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        '& .MuiTextField-root': { m: 1.5, minWidth: '360px' },\n      }}\n      onSubmit={handleSubmit(handleFormSubmit)}\n    >\n      <TextField\n        label=\"Name\"\n        required\n        placeholder=\"Adam Smith\"\n        {...register('name', { required: 'This field is required' })}\n      />\n      <TextField\n        label=\"Number\"\n        required\n        placeholder=\"000-00-00\"\n        {...register('number', {\n          required: 'This field is required',\n          minLength: {\n            value: 7,\n            message: 'Please, enter the number 000-00-00',\n          },\n          pattern: /^[0-9]{3}-[0-9]{2}-[0-9]{2}$/,\n        })}\n      />\n      <Button\n        type=\"submit\"\n        sx={{\n          mt: 2,\n        }}\n      >\n        Add contact\n      </Button>\n    </Box>\n  );\n};\n\nexport default FormAddContact;\n","import { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Section } from 'components/Section/Section';\nimport React from 'react';\nimport {\n  StyledContactsContainer,\n  StyledContactsSection,\n} from './ContactsPage.styled';\nimport FormAddContact from 'components/FormAddContact/FormAddContact';\n\nconst ContactsPage = () => {\n  return (\n    <StyledContactsSection>\n      <StyledContactsContainer>\n        <Section title=\"Phonebook\">\n          <FormAddContact />\n        </Section>\n      </StyledContactsContainer>\n      <StyledContactsContainer>\n        <Section title=\"Contacts\">\n          <Filter />\n          <ContactList />\n        </Section>\n      </StyledContactsContainer>\n    </StyledContactsSection>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["ContactItem","_ref","_ref$contact","contact","id","name","number","dispatch","useDispatch","_jsxs","ListItem","secondaryAction","_jsx","IconButton","edge","onClick","deleteContact","children","DeleteIcon","ListItemText","primary","Typography","variant","secondary","Divider","ContactList","contacts","useSelector","selectFilteredContacts","isLoading","selectIsLoading","error","selectError","useEffect","fetchContacts","AppLoader","Alert","severity","Boolean","length","List","sx","width","maxWidth","bgcolor","map","Filter","Box","component","m","TextField","type","label","onChange","event","setFilter","target","value","size","Section","title","theme","useTheme","_Fragment","_objectSpread","typography","h2","StyledContactsSection","styled","_templateObject","_taggedTemplateLiteral","StyledContactsContainer","_templateObject2","selectContacts","_useForm","useForm","defaultValues","register","handleSubmit","reset","minWidth","onSubmit","data","some","Notify","addContact","required","placeholder","minLength","message","pattern","Button","mt","FormAddContact"],"sourceRoot":""}