{"version":3,"file":"static/js/596.7cfe1efa.chunk.js","mappings":"6SAuEA,EAhEyB,WACvB,IAAAA,GAA0CC,EAAAA,EAAAA,IAAQ,CAChDC,cAAe,CAAEC,KAAM,GAAIC,MAAO,GAAIC,SAAU,MAD1CC,EAAQN,EAARM,SAAUC,EAAYP,EAAZO,aAAcC,EAAKR,EAALQ,MAI1BC,GAAWC,EAAAA,EAAAA,MAEXC,EAAgB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMC,GAAI,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACZV,GAASW,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,GAAC,CAAC,EAAIL,KAAS,KAAD,EAAtC,GAEsB,aAFtBC,EAAAK,KAEDC,KAAKC,cAA4B,CAAAP,EAAAE,KAAA,QAGxC,OAFFM,EAAAA,OAAAA,QACE,+DACAR,EAAAS,OAAA,iBAIJD,EAAAA,OAAAA,QAAe,YACfjB,IAAQ,wBAAAS,EAAAU,OAAA,GAAAZ,EAAA,KACT,gBAZqBa,GAAA,OAAAhB,EAAAiB,MAAA,KAAAC,UAAA,KActB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFC,UAAU,OACVC,GAAI,CACF,uBAAwB,CAAEC,EAAG,IAAKC,SAAU,UAE9CC,SAAU9B,EAAaI,GAAkB2B,SAAA,EAEzCC,EAAAA,EAAAA,KAACC,EAAAA,GAASnB,EAAAA,EAAAA,GAAA,CACRoB,KAAK,OACLtC,KAAK,OACLuC,MAAM,OACNC,UAAQ,GACJrC,EAAS,OAAQ,CAAEqC,SAAU,8BAEnCJ,EAAAA,EAAAA,KAACC,EAAAA,GAASnB,EAAAA,EAAAA,GAAA,CACRoB,KAAK,QACLtC,KAAK,QACLuC,MAAM,QACNC,UAAQ,GACJrC,EAAS,QAAS,CAAEqC,SAAU,8BAEpCJ,EAAAA,EAAAA,KAACC,EAAAA,GAASnB,EAAAA,EAAAA,GAAA,CACRoB,KAAK,WACLtC,KAAK,WACLuC,MAAM,WACNC,UAAQ,GACJrC,EAAS,WAAY,CACvBqC,SAAU,uCAGdJ,EAAAA,EAAAA,KAACK,EAAAA,EAAM,CACLH,KAAK,SACLP,GAAI,CACFW,GAAI,GACJP,SACH,aAKP,E,0DCrBA,EAzCmB,WACjB,IAAMQ,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1BC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IAE9B,OACEX,EAAAA,EAAAA,KAACP,EAAAA,EAAG,CACFE,GAAI,CACFiB,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,UAAW,QACXC,gBAAiB,SAAAC,GAAK,OAAIA,EAAMC,QAAQC,WAAWC,KAAK,EACxDC,QAAS,GACTtB,UAEFP,EAAAA,EAAAA,MAAC8B,EAAAA,EAAK,CACJC,UAAW,EACX5B,GAAI,CACF6B,SAAU,IACVC,MAAO,OACPJ,QAAS,EACTL,gBAAiB,SAAAC,GAAK,OAAIA,EAAMC,QAAQC,WAAWO,OAAO,EAC1DC,aAAc,EACdC,UAAW,SAAAX,GAAK,OAAIA,EAAMY,QAAQ,EAAE,GACpC9B,SAAA,EAEFC,EAAAA,EAAAA,KAAC8B,EAAAA,EAAU,CAACC,QAAQ,KAAKrC,UAAU,KAAKsC,cAAY,EAAAjC,SAAC,YAGpDQ,IAAeP,EAAAA,EAAAA,KAACiC,EAAAA,EAAS,KAC1BjC,EAAAA,EAAAA,KAACkC,EAAgB,IAChBxB,IACClB,EAAAA,EAAAA,MAAC2C,EAAAA,EAAK,CAACJ,QAAQ,WAAWK,SAAS,QAAQzC,GAAI,CAAEW,GAAI,GAAIP,SAAA,CAAC,UAChDW,SAMpB,C","sources":["components/RegistrationForm/RegistrationForm.jsx","pages/SignupPage.jsx"],"sourcesContent":["import { Box, Button, TextField } from '@mui/material';\n\nimport { useDispatch } from 'react-redux';\nimport { signup } from '../../redux/auth/auth-operations';\nimport { useForm } from 'react-hook-form';\nimport { Notify } from 'notiflix';\n\nconst RegistrationForm = () => {\n  const { register, handleSubmit, reset } = useForm({\n    defaultValues: { name: '', email: '', password: '' },\n  });\n\n  const dispatch = useDispatch();\n\n  const handleFormSubmit = async data => {\n    const result = await dispatch(signup({ ...data }));\n\n    if (result.meta.requestStatus === 'rejected') {\n      Notify.failure(\n        'This email is already in use, or the password is incorrect.'\n      );\n      return;\n    }\n\n    Notify.success('Welcome!');\n    reset();\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        '& .MuiTextField-root': { m: 1.5, minWidth: '360px' },\n      }}\n      onSubmit={handleSubmit(handleFormSubmit)}\n    >\n      <TextField\n        type=\"text\"\n        name=\"name\"\n        label=\"Name\"\n        required\n        {...register('name', { required: 'This field is required' })}\n      />\n      <TextField\n        type=\"email\"\n        name=\"email\"\n        label=\"Email\"\n        required\n        {...register('email', { required: 'This field is required' })}\n      />\n      <TextField\n        type=\"password\"\n        name=\"password\"\n        label=\"Password\"\n        required\n        {...register('password', {\n          required: 'Please, enter at list 8 symbols',\n        })}\n      />\n      <Button\n        type=\"submit\"\n        sx={{\n          mt: 2,\n        }}\n      >\n        Submit\n      </Button>\n    </Box>\n  );\n};\n\nexport default RegistrationForm;\n","import RegistrationForm from 'components/RegistrationForm/RegistrationForm';\nimport React from 'react';\nimport { Alert, Typography, Box, Paper } from '@mui/material';\nimport { selectAuthError, selectAuthLoading } from '../redux/selectors';\nimport { useSelector } from 'react-redux';\nimport { AppLoader } from 'components/Loader/Loader';\n\nconst SignupPage = () => {\n  const authLoading = useSelector(selectAuthLoading);\n  const authError = useSelector(selectAuthError);\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        minHeight: '100vh',\n        backgroundColor: theme => theme.palette.background.paper,\n        padding: 3,\n      }}\n    >\n      <Paper\n        elevation={3}\n        sx={{\n          maxWidth: 600,\n          width: '100%',\n          padding: 3,\n          backgroundColor: theme => theme.palette.background.default,\n          borderRadius: 2,\n          boxShadow: theme => theme.shadows[3],\n        }}\n      >\n        <Typography variant=\"h1\" component=\"h1\" gutterBottom>\n          Sign Up\n        </Typography>\n        {authLoading && <AppLoader />}\n        <RegistrationForm />\n        {authError && (\n          <Alert variant=\"outlined\" severity=\"error\" sx={{ mt: 2 }}>\n            Error: {authError}\n          </Alert>\n        )}\n      </Paper>\n    </Box>\n  );\n};\n\nexport default SignupPage;\n"],"names":["_useForm","useForm","defaultValues","name","email","password","register","handleSubmit","reset","dispatch","useDispatch","handleFormSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","signup","_objectSpread","sent","meta","requestStatus","Notify","abrupt","stop","_x","apply","arguments","_jsxs","Box","component","sx","m","minWidth","onSubmit","children","_jsx","TextField","type","label","required","Button","mt","authLoading","useSelector","selectAuthLoading","authError","selectAuthError","display","justifyContent","alignItems","minHeight","backgroundColor","theme","palette","background","paper","padding","Paper","elevation","maxWidth","width","default","borderRadius","boxShadow","shadows","Typography","variant","gutterBottom","AppLoader","RegistrationForm","Alert","severity"],"sourceRoot":""}